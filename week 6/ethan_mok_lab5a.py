"""
    ACIT 1515 - Lab 5 (review)

    For this version of Lab 5, you will be asked to perform a series of small, discrete tasks testing your familiarity with:

    - Creating variables
    - Checking 
    - Creating lists 
    - Basic list operations (reading, writing)
    - For loops
    - If statements
    - Functions

    as well as various combinations of the above intended to give you exposure to common programming patterns. The tasks are arranged roughly in order, least difficult to most difficult.
"""

import random

def print_random_number():
    print(random.randint(1,100))

def random_number():
    return random.randint(1,100)

def random_number_range(upper):
    return (random.randint(1,upper))

def main():
    # 1. Create a variable that stores an int
    x = int(1)


    # 2. Create a variable that stores a string
    y = "hi"

    # 3. Create a variable that stores an empty list
    list = []


    # 4. Append the variables from steps 1 and 2 into your list from step 3
    list.append(x)
    list.append(y)


    # 5. Print the list from step 3 (all the values) and the length of the list, all on one line
    print(list)


    # 6. Print the first value in the list from step 3
    print(list[0])


    # 7. Change the second value in the list from step 3 to a different string
    list[1] = "hello"


    # 8. Use a for loop (without using range()) to loop through the list from step 3 and print the values one per line
    for i in list:
        print(i)


    # 9. Use for loop (using range()) to loop through the list from step 3 and print the values one per line
    for i in range(len(list)):
        print(list[i])


    # 10. Write an if statement with the following logic:
    # if the data type of the variable from step 1 is an int, print the variable and the data type
    if type(y) == str:
        print(f"{y} String")


    # 11. Use a for loop (with range()) to loop through the list from step 3
    #    Add an if statement inside the loop that checks the data type of the current value in the list
    #    If the data type of the value is int, convert it to a string
    for i in range(len(list)):
        if type(list[i]) == int:
            list[i] = str(list[i])


    # 12. Print the list from step 3 (all the values), all on one line
    #     NOTE: check the output in the command line - are all the values in the list inside quotes?
    #           If not, double check your logic for step 11
    print(list)


    # 13. Define a function (above the line def main() above) named print_random_number
    # a. The print_random_number function has no arguments
    # b. The print_random_number function must generate a random number (using random.randint) between 1 and 100 and print it
    print_random_number()


    # 14. Test your print_random_number function by running it


    # 15. Define a function (above the line def main() above) named random_number
    # a. The random_number function has no arguments
    # b. The random_number function must generate a random number (using random.randint) between 1 and 100 and return it
    # c. The random_number function must NOT print any information to the console, only 'return' the value


    # 16. Test your random_number function by running the function inside of a print() statement
    print(random_number())
    
    # 17. Define a function (above the line def main() above) named random_number_range
    # a. The random_number_range function must have one argument named 'upper'
    # b. The random_number_range function must generate a random number (using random.randint) between 1 and 'upper' and return it


    # 18. Test your random_number_range function by running the function and passing in different values for the 'upper' argument - ensure (to a reasonable degree of certainty) that the generated random number is never greater than the value of 'upper' you pass in
    # NOTE: use the same method as step 16 above to test, i.e. pass the returned value to print()


    # 19. Call the random_number function and store the result in a variable
    rand = random_number()

    # 20. Print the variable from step 19 and its data type
    print(rand, "," , type(rand))


    # 21. Pass the variable from step 19 into the random_number_range function, and print the result
    # NOTE: run the script several times to ensure (with a reasonable degree of certainty) that the number generated by random_number_range is never greater than the value stored in your res variable from step 19
    print(random_number_range(rand))

    # 22. As a variation of steps 19 through 21, call your random_number function and pass its return value directly to random_number_range (instead of first storing it in a variable), then print the value
    # This means that the argument to print() should be the return value of random_number,
    # and the argument to random_number should be the return value of random_number_range
    print(random_number_range(random_number()))

    # 23. Create another variable that stores an empty list
    list2 = []

    # 24. Create a for loop (using range()) that runs 5 times
    # Inside the loop, call the random_number function and append the returned number to the list created in step 23
    for i in range(5):
        list2.append(random_number())

    # 25. Print all the values in the list from step 23, all on one line
    print(list2)


    # 26. Create a for loop (using range()) that runs 10 times
    # Inside the loop, add an if/else statement:
    # If the value of your loop variable (e.g. 'i') is less than 5, print the i-th value from the list you created in step 23
    # Else, append the number 1 to the list you created in step 23
    print("---------------------------------")
    for i in range(10):
        if i < 5:
            print(list2[i])
        else:
            list2.append(1)


    # 27. Print all the values in the list from step 23, all on one line.
    # NOTE: it should consist of 10 values, the first five will be random, the last five will be 1
    # e.g. [10, 24, 63, 42, 89, 1, 1, 1, 1, 1]
    print(list2)


    # 28. Append the list from step 23 to the list created in step 3
    list.append(list2)

    # 29. Print the list created in step 3 and verify that you have a nested list
    print(list)


    # 30. Use a for loop (with range()) to loop through the final item in the list from step 3 and print the values, one per line
    # e.g. if the list from step 3 now contains ["10", "Chris", [24, 94, 61, 76, 100, 1, 1, 1, 1, 1]], your output should be:
    # 24
    # 94
    # 61
    # 76
    # 100
    # 1
    # 1
    # 1
    # 1
    # 1      
    for i in range(len(list[len(list)-1])):
        print(list[len(list)-1][i])

    for i in range(len(list[2])):
        print(list[2][i])



if __name__ == "__main__":
    main()